-- Database generated with pgModeler (PostgreSQL Database Modeler).
-- pgModeler  version: 0.9.2
-- PostgreSQL version: 12.0
-- Project Site: pgmodeler.io
-- Model Author: ---


-- Database creation must be done outside a multicommand file.
-- These commands were put in this file only as a convenience.
-- -- object: new_database | type: DATABASE --
-- -- DROP DATABASE IF EXISTS new_database;
-- CREATE DATABASE new_database;
-- -- ddl-end --
-- 

-- object: public."user" | type: TABLE --
-- DROP TABLE IF EXISTS public."user" CASCADE;
CREATE TABLE public."user" (
	id int8 NOT NULL GENERATED BY DEFAULT AS IDENTITY ,
	login varchar(128),
	password varchar(32) NOT NULL,
	clan_id int8,
	CONSTRAINT user_pk PRIMARY KEY (id),
	CONSTRAINT user_login_un UNIQUE (login),
	CONSTRAINT user_clan_un UNIQUE (id,clan_id)

);
-- ddl-end --
-- ALTER TABLE public."user" OWNER TO postgres;
-- ddl-end --

INSERT INTO public."user" (id, login, password, clan_id) VALUES (E'1', E'admin', E'4dd9777d1b5bab263189083f3a39b0f3', E'1');
-- ddl-end --
INSERT INTO public."user" (id, login, password, clan_id) VALUES (E'2', E'user', E'4dd9777d1b5bab263189083f3a39b0f3', E'2');
-- ddl-end --

-- object: public.clan | type: TABLE --
-- DROP TABLE IF EXISTS public.clan CASCADE;
CREATE TABLE public.clan (
	id int8 NOT NULL GENERATED BY DEFAULT AS IDENTITY ,
	name varchar(128) NOT NULL,
	description varchar(512),
	CONSTRAINT clan_un UNIQUE (name),
	CONSTRAINT clan_pk PRIMARY KEY (id)

);
-- ddl-end --
-- ALTER TABLE public.clan OWNER TO postgres;
-- ddl-end --

INSERT INTO public.clan (id, name, description) VALUES (E'1', E'Клан 1', DEFAULT);
-- ddl-end --
INSERT INTO public.clan (id, name, description) VALUES (E'2', E'Клан 2', DEFAULT);
-- ddl-end --
INSERT INTO public.clan (id, name, description) VALUES (E'3', E'Клан 3', DEFAULT);
-- ddl-end --

-- object: public.message | type: TABLE --
-- DROP TABLE IF EXISTS public.message CASCADE;
CREATE TABLE public.message (
	id int8 NOT NULL GENERATED BY DEFAULT AS IDENTITY ,
	chat_id int8 NOT NULL,
	user_id smallint NOT NULL,
	text text NOT NULL,
	dt timestamptz NOT NULL
);
-- ddl-end --
-- ALTER TABLE public.message OWNER TO postgres;
-- ddl-end --

-- object: public.chat | type: TABLE --
-- DROP TABLE IF EXISTS public.chat CASCADE;
CREATE TABLE public.chat (
	id int8 NOT NULL GENERATED BY DEFAULT AS IDENTITY ,
	name varchar(64) NOT NULL,
	clan_id int8 NOT NULL,
	CONSTRAINT chat_pk PRIMARY KEY (id),
	CONSTRAINT chat_name_un UNIQUE (name)

);
-- ddl-end --
-- ALTER TABLE public.chat OWNER TO postgres;
-- ddl-end --

INSERT INTO public.chat (id, name, clan_id) VALUES (E'1', E'Чат клана 1', E'1');
-- ddl-end --
INSERT INTO public.chat (id, name, clan_id) VALUES (E'2', E'Чат клана 2', E'2');
-- ddl-end --
INSERT INTO public.chat (id, name, clan_id) VALUES (E'3', E'Второй чат клана 2', E'2');
-- ddl-end --
INSERT INTO public.chat (id, name, clan_id) VALUES (E'4', E'Чат клана 3', E'3');
-- ddl-end --

-- object: user_clan_fk | type: CONSTRAINT --
-- ALTER TABLE public."user" DROP CONSTRAINT IF EXISTS user_clan_fk CASCADE;
ALTER TABLE public."user" ADD CONSTRAINT user_clan_fk FOREIGN KEY (clan_id)
REFERENCES public.clan (id) MATCH SIMPLE
ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --

-- object: message_chat_fk | type: CONSTRAINT --
-- ALTER TABLE public.message DROP CONSTRAINT IF EXISTS message_chat_fk CASCADE;
ALTER TABLE public.message ADD CONSTRAINT message_chat_fk FOREIGN KEY (chat_id)
REFERENCES public.chat (id) MATCH FULL
ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --

-- object: message_user_fk | type: CONSTRAINT --
-- ALTER TABLE public.message DROP CONSTRAINT IF EXISTS message_user_fk CASCADE;
ALTER TABLE public.message ADD CONSTRAINT message_user_fk FOREIGN KEY (user_id)
REFERENCES public."user" (id) MATCH FULL
ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --

-- object: char_clan_fk | type: CONSTRAINT --
-- ALTER TABLE public.chat DROP CONSTRAINT IF EXISTS char_clan_fk CASCADE;
ALTER TABLE public.chat ADD CONSTRAINT char_clan_fk FOREIGN KEY (clan_id)
REFERENCES public.clan (id) MATCH FULL
ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --


